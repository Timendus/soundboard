@import "colours.css";

.sound {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;

  padding: 1em;
  overflow: hidden;
  text-align: center;
  border-radius: 5px;

  &.dragging {
    box-shadow: 0px 0px 10px 5px rgba(255, 0, 0, 0.6);
  }

  &.loaded {
    cursor: pointer;

    &:hover {
      box-shadow: 0px 0px 0px 2px white;
    }

    & .props h1,
    & .props p {
      color: white;
    }
  }

  /* Please don't catch click / drag events */
  & .progress,
  & .props,
  & .settings,
  h1,
  p {
    pointer-events: none;
  }

  /* This is a nice little progress indicator
     that is yet to be made active :) */
  & .progress {
    flex: 1 1;
    display: block;
    position: relative;

    body.settings & {
      display: none;
    }

    & .bar {
      position: absolute;
      top: 45%;
      left: 25%;
      height: 2px;
      width: 50%;
      padding: 0;
      background: white;
    }
  }

  /* These are the textual properties title and artist */
  & .props {
    flex: 1 1;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;

    & h1,
    & p {
      font-size: 12px;
      line-height: 1em;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      padding: 0.5em 0;
      margin: 0;
      user-select: none;
    }
  }

  /* These are the settings of the sound, only visible in settings mode */
  & .settings {
    flex: 1 1;
    display: none;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    position: relative;

    body.settings & {
      display: flex;
    }

    & button {
      width: 30px;
      height: 30px;
      margin: 2px;

      pointer-events: all;
      cursor: pointer;

      background-color: var(--play-mode-button);
      border: 2px solid var(--play-mode-button-border);
      border-radius: 50%;

      &.active {
        border-color: var(--play-mode-button-border-active);
        background-color: var(--play-mode-button-active);
      }

      &.show-colours {
        background: none;
        &:hover {
          background: rgba(255,255,255,0.3);
        }
      }

      &.retrigger:before {
        content: "-";
      }

      &.oneshot:before {
        content: "|";
      }

      &.gate:before {
        content: "o";
      }

      &.colour {
        &.blue {
          background-color: var(--sound-colour-blue);
        }

        &.red {
          background-color: var(--sound-colour-red);
        }

        &.purple {
          background-color: var(--sound-colour-purple);
        }

        &.cyan {
          background-color: var(--sound-colour-cyan);
        }

        &.yellow {
          background-color: var(--sound-colour-yellow);
        }

        &.green {
          background-color: var(--sound-colour-green);
        }

        &.orange {
          background-color: var(--sound-colour-orange);
        }
      }

      &.assign-key {
        border-color: var(--play-mode-button-border-active);

        &:not(.assigned):before {
          content: "⌨︎";
          margin-left: -2px;
        }
      }

      &:hover {
        filter: brightness(1.1);
      }
    }

    & .modes,
    & .colours,
    & .keys {
      position: absolute;
      display: none;
      padding: 5px;
      pointer-events: all;

      background-color: var(--background-colour);

      &.active {
        display: block;
      }

      &.colours {
        top: -1em;
      }

      &.keys {
        color: white;
        padding: 10px 20px;
      }

      & button {
        margin: 2px;
      }
    }
  }
}
